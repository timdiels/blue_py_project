# Auto generated by ct-mksetup
# Do not edit this file, edit ./project.py instead

from setuptools import setup
setup(
    **{   'author': 'Tim Diels',
    'author_email': 'timdiels.m@gmail.com',
    'classifiers': [   'Natural Language :: English',
                       'Intended Audience :: Developers',
                       'Development Status :: 3 - Alpha',
                       'Topic :: Software Development',
                       'Topic :: Software Development :: Libraries',
                       'Operating System :: POSIX',
                       'Operating System :: POSIX :: AIX',
                       'Operating System :: POSIX :: BSD',
                       'Operating System :: POSIX :: BSD :: BSD/OS',
                       'Operating System :: POSIX :: BSD :: FreeBSD',
                       'Operating System :: POSIX :: BSD :: NetBSD',
                       'Operating System :: POSIX :: BSD :: OpenBSD',
                       'Operating System :: POSIX :: GNU Hurd',
                       'Operating System :: POSIX :: HP-UX',
                       'Operating System :: POSIX :: IRIX',
                       'Operating System :: POSIX :: Linux',
                       'Operating System :: POSIX :: Other',
                       'Operating System :: POSIX :: SCO',
                       'Operating System :: POSIX :: SunOS/Solaris',
                       'Operating System :: Unix',
                       'License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)',
                       'Programming Language :: Python',
                       'Programming Language :: Python :: 3',
                       'Programming Language :: Python :: 3 :: Only',
                       'Programming Language :: Python :: 3.2',
                       'Programming Language :: Python :: 3.3',
                       'Programming Language :: Python :: 3.4',
                       'Programming Language :: Python :: 3.5',
                       'Programming Language :: Python :: Implementation',
                       'Programming Language :: Python :: Implementation :: CPython',
                       'Programming Language :: Python :: Implementation :: Stackless',
                       'Topic :: Utilities',
                       'Topic :: Software Development',
                       'Topic :: Software Development :: Libraries',
                       'Topic :: Software Development :: Libraries :: Python Modules'],
    'description': 'Python 3 utility library',
    'extras_require': {   'algorithms': ['numpy', 'scipy', 'scikit-learn', 'collections-extended'],
                          'application': ['click', 'pyxdg'],
                          'cli': ['click'],
                          'configuration': ['pyxdg'],
                          'data_frame': ['numpy', 'pandas'],
                          'debug': ['psutil'],
                          'dev': ['sphinx-rtd-theme', 'sphinx', 'numpydoc'],
                          'dict': ['more-itertools'],
                          'http': ['requests'],
                          'inspect': [],
                          'pymysql': ['pymysql'],
                          'pyqt': [],
                          'sqlalchemy': ['sqlparse'],
                          'test': [   'pytest',
                                      'pytest-xdist',
                                      'pytest-env',
                                      'pytest-cov',
                                      'coverage-pth',
                                      'pytest-mock',
                                      'pytest-localserver',
                                      'pytest-capturelog',
                                      'plumbum']},
    'install_requires': [],
    'keywords': 'development util library',
    'license': 'LGPL3',
    'long_description': 'Chicken Turtle Util (CTU) provides an API of various Python utility\n'
                        'functions.\n'
                        '\n'
                        'Chicken Turtle Util is alpha. None of the interface is stable (yet),\n'
                        'meaning it may change in the future.\n'
                        '\n'
                        'Chicken Turtle Util offers a variety of features, as such we kept most\n'
                        'dependencies optional. When using a module, add/install its\n'
                        'dependencies, listed in its corresponding ``*_requirements.in`` file\n'
                        'found in the root of the project; e.g.\n'
                        '`cli\\_requirements.in '
                        '<https://github.com/timdiels/chicken_turtle_util/blob/master/cli_requirements.in>`__\n'
                        'lists the dependencies of chicken\\_turtle\\_util.cli.\n'
                        '\n'
                        'Links\n'
                        '=====\n'
                        '\n'
                        '-  `Documentation <http://pythonhosted.org/chicken_turtle_util/>`__\n'
                        '-  `PyPI <https://pypi.python.org/pypi/chicken_turtle_util/>`__\n'
                        '-  `GitHub <https://github.com/timdiels/chicken_turtle_util/>`__\n'
                        '\n'
                        'Features\n'
                        '========\n'
                        '\n'
                        '-  \\`algorithms.spread\\_points\\_in\\_hypercube\\`:\n'
                        '\n'
                        '   Place n points in a unit hypercube such that the minimum distance\n'
                        '   between points is approximately maximal\n'
                        '\n'
                        '-  \\`algorithms.multi\\_way\\_partitioning\\`: Greedily divide weighted\n'
                        '   items equally across bins (multi-way partition problem)\n'
                        '-  data\\_frame and \\`series\\`: `pandas <http://pandas.pydata.org/>`__\n'
                        '   utility functions\n'
                        '\n'
                        '   -  \\`data\\_frame.replace\\_na\\_with\\_none\\`: Replace NaN values in\n'
                        '      DataFrame with None\n'
                        '   -  \\`data\\_frame.split\\_array\\_like\\`: Split cells with array\\_like\n'
                        '      values along row axis.\n'
                        '   -  \\`series.invert\\`: Swap index with values of series\n'
                        '\n'
                        '-  \\`dict\\`: dictionary utilities:\n'
                        '\n'
                        '   -  \\`invert\\`: Invert dict by swapping each value with its key\n'
                        '   -  \\`DefaultDict\\`: Like collections.defaultdict, but its value\n'
                        '      factory function takes a key argument, e.g.\n'
                        '      ``DefaultDict(lambda key: MyClass(key))``\n'
                        "   -  \\`pretty\\_print\\_head\\`: Pretty print the 'first' lines of a dict\n"
                        '\n'
                        '-  \\`path\\`: pathlib.Path utilities, including an equivalent of\n'
                        '   shutil.rmtree which reliably works on NFS.\n'
                        '-  \\`application\\`: Mixins for building application (context) classes\n'
                        '-  \\`function.compose\\`: Compose functions\n'
                        '-  \\`http.download\\`: Download http resource (using requests) and save\n'
                        '   to file name suggested by HTTP server\n'
                        '-  \\`iterable.sliding\\_window\\`: Iterate using a sliding window\n'
                        '-  \\`iterable.partition\\`: Split iterable into partitions\n'
                        '-  \\`iterable.is\\_sorted\\`: Get whether iterable is sorted ascendingly\n'
                        '-  \\`iterable.flatten\\`: Flatten shallowly zero or more times\n'
                        '-  \\`configuration.ConfigurationLoader\\`: loads a single configuration\n'
                        '   from one or more files spread across /etc and XDG config directories.\n'
                        '-  \\`set.merge\\_by\\_overlap\\`: Of a list of sets, merge those that\n'
                        '   overlap, in place\n'
                        '-  \\`logging.set\\_level\\`: Context manager to temporarily change log\n'
                        '   level of logger\n'
                        '-  \\`cli\\`: extensions to `click <http://click.pocoo.org/>`__\n'
                        '-  \\`pyqt.block\\_signals\\`: Context manager to temporarily turn on\n'
                        '   QObject.blockSignals\n'
                        '-  \\`sqlalchemy.log\\_sql\\`: Context manager to temporarily log sql\n'
                        '   statements emitted by `sqlalchemy <http://www.sqlalchemy.org/>`__\n'
                        '-  \\`various.Object\\`: Like object, but does not raise given args to\n'
                        '   \\_\\_init\\_\\_\n'
                        '\n'
                        'Changelist\n'
                        '==========\n'
                        '\n'
                        'v2.1.0 (to be released)\n'
                        '-----------------------\n'
                        '\n'
                        '-  Moved all Context related objects from cli to application.\n'
                        '-  Added \\`exceptions.InvalidOperationError\\`: raise when an operation\n'
                        '   is illegal/invalid, regardless of the arguments you throw at it (in\n'
                        '   the current state).\n'
                        '-  Added \\`application.ConfigurationMixin\\`: application context mixin\n'
                        '   for loading a configuration\n'
                        '-  Added \\`application.ConfigurationsMixin\\`: application context mixin\n'
                        '   for loading multiple configurations\n'
                        '-  Added \\`configuration.ConfigurationLoader\\`: loads a single\n'
                        '   configuration from one or more files\n'
                        '-  \\`application.Context\\`: cli\\_options() replaced by command(), which\n'
                        '   is more flexible\n'
                        '-  Removed application.command. Use ``cli.Context.command()`` instead\n'
                        '-  Added \\`application.DataDirectoryMixin\\`: application context mixin,\n'
                        '   provides data directory according to XDG standards\n'
                        '-  Added \\`path.write\\`: create or overwrite file with contents\n'
                        '-  Added \\`path.read\\`: get file contents\n'
                        '-  Added \\`path.remove\\`: remove file or directory (recursively), unless\n'
                        "   it's missing\n"
                        '-  Added \\`path.chmod\\`: change file or directory mode bits (optionally\n'
                        '   recursively)\n'
                        '-  Added \\`test.temp\\_dir\\_cwd\\`: pytest fixture that sets current\n'
                        '   working directory to a temporary directory\n'
                        '-  Added \\`dict.assign\\`: assign one dict to the other through mutations\n'
                        '-  Added \\`inspect.function\\_call\\_repr\\`: Get repr of a function call\n'
                        '-  Added \\`inspect.function\\_call\\_args\\`: Get function call arguments\n'
                        '   as a single dict\n'
                        '\n'
                        'v2.0.4\n'
                        '------\n'
                        '\n'
                        'No changelist\n',
    'name': 'chicken_turtle_util',
    'package_data': {'chicken_turtle_util.tests': ['data/inheritance.defaults.conf']},
    'packages': ['chicken_turtle_util', 'chicken_turtle_util.tests'],
    'url': 'https://github.com/timdiels/chicken_turtle_util',
    'version': '0.0.0'}
)
